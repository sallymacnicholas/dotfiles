# A lot of this was stolen from:
#
# * https://github.com/zolrath/dotfiles/blob/master/tmux.conf
# * https://github.com/alanyjw/dotfiles/blob/master/home/.tmux.conf
# * https://www.reddit.com/r/tmux/comments/3paqoi/tmux_21_has_been_released/

### Basics

# Load TPM and any TPM plugins
set-option -g @plugin "tmux-plugins/tpm"
set-option -g @plugin "https://github.com/NHDaly/tmux-scroll-copy-mode"
#set-option -g @plugin "seebi/tmux-colors-solarized"

## Use Ctrl-Space for prefix
unbind-key C-b
#set-option -g prefix C-a
#bind-key C-a last-window
set -g prefix C-a

# Resising with shift+arrow
bind -n S-Up resize-pane -U 15
bind -n S-Down resize-pane -D 15
bind -n S-Left resize-pane -L 15
bind -n S-Right resize-pane -R 15

## Use zsh when running commands here
#set-option -g default-shell $SHELL
## Allow copy and paste with tmux, and also selenium to run properly
#set-option -g default-command "reattach-to-user-namespace -l ${SHELL}"

# Don't wait after pressing Escape
set-option -sg escape-time 0
## Allow prefixed commands to be repeated within 600ms without having to use the
## prefix again -- this is useful when resizing windows
set-option -sg repeat-time 600

## Ensure that keys work under xterms
set-window-option -g xterm-keys on

## Make it easy to reload the config from within tmux
bind-key r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

#### Windows

## Use Vim shortcuts for splitting panes, and also return current directory
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"

## Make it so that we can use Vim mappings to switch between Vim and tmux
## (Ctrl-H, -J, -K, -L)
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
## Get around an issue with neovim and <C-h>
## See: <https://github.com/neovim/neovim/issues/2048#issuecomment-98431886>
bind-key -n C-h if-shell "$is_vim" "send-keys Escape '[104;5u'" "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

## Map <prefix>+H, +J, +K, +L for easily resizing panes
bind-key -r H resize-pane -L 10
bind-key -r J resize-pane -D 10
bind-key -r K resize-pane -U 10
bind-key -r L resize-pane -R 10

## Make it easier to switch windows
## (You can also still reference windows by name)
bind-key e previous-window
bind-key C-e previous-window
bind-key t next-window
bind-key C-t next-window

## Start window numbers at 1 to match keyboard order with tmux window order
set-option -g base-index 1

## Renumber windows sequentially after closing any of them
set-option -g renumber-windows on

#### Copy mode

## Use Vim-like bindings for copy mode
set-window-option -g mode-keys vi

## Make copying just like Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

## Update Enter to also copy
unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

## Enable mouse support
set-option -g mouse on

## Copy when mouse is released
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

## Make Page-up/down automatically enter/exit copy mode
bind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"
bind-key -T copy-mode-vi PPage send-keys -X page-up
bind-key -T copy-mode-vi NPage send-keys -X page-down

## Make it so that you can scroll in copy mode
run-shell $HOME/.tmux/plugins/tmux-scroll-copy-mode/scroll_copy_mode.tmux

#### Appearance

## Use 256 colors, please!
## Note: This must match the same setting your terminal app is using
set-option -g default-terminal "xterm-256color"

## This shiz don't work. I don't know why --sm
## Use Powerline theme to style topbar
#run-shell "powerline-daemon -q"
#source "$HOME/Library/Python/2.7/lib/python/site-packages/powerline/bindings/tmux/powerline.conf"

#bind-key L source-file ~/.tmux/plugins/tmux-colors-solarized/tmuxcolors-light.conf
#bind-key D source-file ~/.tmux/plugins/tmux-colors-solarized/tmuxcolors-dark.conf
#source-file ~/.tmux/plugins/tmux-colors-solarized/tmuxcolors-dark.conf

## Not sure what this does??
#set-window-option -g pane-active-border-style ''

#### Misc

## Rebind new-window to retain current working directory
## http://unix.stackexchange.com/questions/12032/create-new-window-with-current-directory-in-tmux
bind-key c new-window -c "#{pane_current_path}"

## Turn off status updates for right now.
## For some reason, on El Capitan, notifyd keeps spawning and using a lot of CPU
## which is causing periodic lags.
## This seems to fix it for now.
## See: <https://github.com/tmux/tmux/issues/108>
set-option -g status-interval 0

## Activity stuff
set-window-option -g monitor-activity on
set-option -g visual-activity off

# Autorename sanely
set-window-option -g automatic-rename on

# This is necessary for the Vim tmux-focus-events plugin to work
# See <https://github.com/tmux-plugins/vim-tmux-focus-events>
set-option -g focus-events on

## Fin

run "$HOME/.tmux/plugins/tpm/tpm"
